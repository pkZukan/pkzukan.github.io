<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Scarlet &amp; Violet on Zukan Docs</title><link>http://example.org/docs/games/titan/</link><description>Recent content in Scarlet &amp; Violet on Zukan Docs</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="http://example.org/docs/games/titan/index.xml" rel="self" type="application/rss+xml"/><item><title>FileSystem</title><link>http://example.org/docs/games/titan/filesystem/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://example.org/docs/games/titan/filesystem/</guid><description>TRPFD &amp;amp; TRPFS (FileSystem) # Description: # The trpfd is the file descriptor that points to files in the trpfs filesystem. The trpfs contains most of the game&amp;rsquo;s assets.</description></item><item><title>Personal</title><link>http://example.org/docs/games/titan/personal/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://example.org/docs/games/titan/personal/</guid><description> Description: # Contains all the base stats, abilities, etc, as well as evo data.
Schema: # struct SpeciesInfo { species_index: uint16; species_form: uint16; species_model: uint16; color: uint8; bodytype: uint8; height: uint16; weight: uint16; res0: uint32; res1: uint32; res2: uint32; } struct StatInfo { HP: uint8; ATK: uint8; DEF: uint8; SPA: uint8; SPD: uint8; SPE: uint8; } struct GenderData { group: uint8; ratio: uint8; } struct EvoData { species: uint16; form: uint16; region: uint16; can_evolve: uint16; } struct ZukanData { index: uint16; group: uint8; } struct Move { move: uint16; level: int8; } table PersonalData { species: SpeciesInfo; is_present: bool; dex: ZukanData; type1: uint8; type2: uint8; ability1: uint16; ability2: uint16; ability3: uint16; growth: uint8; rate: uint8; gender: GenderData; group_1: uint8; group_2: uint8; evolution_data: EvoData; hatch_steps: uint8; base_friendship: uint8; unk_value: uint16; evo_stage: uint8; unk_flag: uint8; yield_info: StatInfo; stats: StatInfo; evo_table: uint32; technical_machines: [uint16]; egg_moves: [uint16]; reminder_moves: [uint16]; learnset: [Move]; } table PersonalTable { entries:[PersonalData]; } root_type PersonalTable;</description></item></channel></rss>